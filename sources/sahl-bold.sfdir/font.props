SplineFontDB: 3.0
FontName: Sahl-Bold
FullName: Sahl Bold
FamilyName: Sahl
Weight: Bold
Copyright: Digitized data copyright (c) 2010, Google Corporation.
Version: 1.00
ItalicAngle: 0
UnderlinePosition: -103
UnderlineWidth: 102
Ascent: 1638
Descent: 410
sfntRevision: 0x00010000
LayerCount: 2
Layer: 0 1 "Back"  1
Layer: 1 1 "Fore"  0
XUID: [1021 866 695683988 7805531]
FSType: 8
OS2Version: 3
OS2_WeightWidthSlopeOnly: 0
OS2_UseTypoMetrics: 1
CreationTime: 1291218953
PfmFamily: 17
TTFWeight: 700
TTFWidth: 5
LineGap: 0
VLineGap: 0
Panose: 2 11 8 6 3 8 4 2 2 4
OS2TypoAscent: 2474
OS2TypoAOffset: 0
OS2TypoDescent: -1437
OS2TypoDOffset: 0
OS2TypoLinegap: 0
OS2WinAscent: 2474
OS2WinAOffset: 0
OS2WinDescent: 1437
OS2WinDOffset: 0
HheadAscent: 2474
HheadAOffset: 0
HheadDescent: -1437
HheadDOffset: 0
OS2SubXSize: 1434
OS2SubYSize: 1331
OS2SubXOff: 0
OS2SubYOff: 287
OS2SupXSize: 1434
OS2SupYSize: 1331
OS2SupXOff: 0
OS2SupYOff: 977
OS2StrikeYSize: 102
OS2StrikeYPos: 814
OS2Vendor: '1ASC'
OS2CodePages: 00000001.00000000
OS2UnicodeRanges: 00002003.80002000.00000008.00000000
Lookup: 4 1 0 "'ccmp' Glyph Composition/Decomposition in Arabic lookup 0"  {"'ccmp' Glyph Composition/Decomposition in Arabic lookup 0 subtable"  } ['ccmp' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 1 1 0 "'locl' Localized Forms in Arabic lookup 1"  {"'locl' Localized Forms in Arabic lookup 1 subtable"  } ['locl' ('arab' <'URD ' > ) ]
Lookup: 1 9 0 "'isol' Isolated Forms in Arabic lookup 2"  {"'isol' Isolated Forms in Arabic lookup 2 subtable"  } ['isol' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 1 9 0 "'fina' Terminal Forms in Arabic lookup 3"  {"'fina' Terminal Forms in Arabic lookup 3 subtable"  } ['fina' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 1 9 0 "'init' Initial Forms in Arabic lookup 4"  {"'init' Initial Forms in Arabic lookup 4 subtable"  } ['init' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 1 9 0 "'medi' Medial Forms in Arabic lookup 5"  {"'medi' Medial Forms in Arabic lookup 5 subtable"  } ['medi' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 4 9 1 "'rlig' Required Ligatures in Arabic lookup 6"  {"'rlig' Required Ligatures in Arabic lookup 6 subtable"  } ['rlig' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 4 1 1 "'liga' Standard Ligatures in Arabic lookup 7"  {"'liga' Standard Ligatures in Arabic lookup 7 subtable"  } ['liga' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 4 9 1 "'liga' Standard Ligatures in Arabic lookup 8"  {"'liga' Standard Ligatures in Arabic lookup 8 subtable"  } ['liga' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 260 1 0 "'mark' Mark Positioning in Arabic lookup 0"  {"'mark' Mark Positioning in Arabic lookup 0 subtable"  } ['mark' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 261 1 0 "'mark' Mark Positioning in Arabic lookup 1"  {"'mark' Mark Positioning in Arabic lookup 1 subtable"  } ['mark' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 262 1 0 "'mkmk' Mark to Mark in Arabic lookup 2"  {"'mkmk' Mark to Mark in Arabic lookup 2 subtable"  } ['mkmk' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
Lookup: 262 1 0 "'mkmk' Mark to Mark in Arabic lookup 3"  {"'mkmk' Mark to Mark in Arabic lookup 3 subtable"  } ['mkmk' ('arab' <'FAR ' 'URD ' 'dflt' > ) ]
MarkAttachClasses: 1
DEI: 91125
TtTable: prep
NPUSHB
 13
 71
 70
 12
 31
 7
 35
 6
 85
 64
 22
 1
 5
 1
PUSHW_1
 400
PUSHB_2
 84
 83
CALL
CALL
MPPEM
PUSHW_1
 2047
GT
MPPEM
PUSHB_1
 9
LT
OR
PUSHB_1
 1
GETINFO
PUSHB_1
 37
GTEQ
PUSHB_1
 1
GETINFO
PUSHB_1
 64
LTEQ
AND
PUSHB_1
 6
GETINFO
PUSHB_1
 0
NEQ
AND
OR
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
SCANCTRL
SCANTYPE
SCANTYPE
SVTCA[y-axis]
WS
SCVTCI
MPPEM
PUSHB_1
 50
GTEQ
IF
PUSHB_1
 32
SCVTCI
EIF
MPPEM
PUSHB_1
 100
GTEQ
IF
PUSHB_1
 16
SCVTCI
PUSHB_2
 22
 0
WS
EIF
CALL
CALL
RTG
EndTTInstrs
TtTable: fpgm
NPUSHB
 71
 91
 90
 89
 88
 85
 84
 83
 82
 81
 80
 79
 78
 77
 76
 75
 74
 73
 72
 71
 70
 69
 68
 67
 66
 65
 64
 63
 62
 61
 60
 59
 58
 57
 56
 55
 54
 53
 49
 48
 47
 46
 45
 44
 40
 39
 38
 37
 36
 35
 34
 33
 31
 24
 20
 17
 16
 15
 14
 13
 11
 10
 9
 8
 7
 6
 5
 4
 3
 2
 1
 0
FDEF
DUP
PUSHB_1
 1
ADD
RCVT
PUSHB_1
 3
CINDEX
DUP
SRP1
GC[cur]
SUB
SWAP
RCVT
SWAP
SUB
SCFS
ENDF
FDEF
DUP
RCVT
RTG
ROUND[Grey]
WCVTP
ENDF
FDEF
RCVT
SWAP
GC[cur]
ADD
PUSHB_1
 32
SUB
DUP
PUSHB_1
 70
ADD
PUSHB_1
 4
MINDEX
SWAP
SCFS
SCFS
ENDF
FDEF
RCVT
SWAP
GC[cur]
SWAP
SUB
PUSHB_1
 32
ADD
DUP
PUSHB_1
 38
SUB
PUSHB_1
 32
SUB
PUSHB_1
 4
MINDEX
SWAP
SCFS
SCFS
ENDF
FDEF
RCVT
SWAP
GC[cur]
ADD
PUSHB_1
 64
SUB
DUP
PUSHB_1
 102
ADD
PUSHB_1
 4
MINDEX
SWAP
SCFS
SCFS
ENDF
FDEF
RCVT
SWAP
GC[cur]
SWAP
SUB
PUSHB_1
 64
ADD
DUP
PUSHB_1
 38
SUB
PUSHB_1
 64
SUB
PUSHB_1
 4
MINDEX
SWAP
SCFS
SCFS
ENDF
FDEF
SVTCA[x-axis]
SRP0
DUP
ALIGNRP
SVTCA[y-axis]
ALIGNRP
ENDF
FDEF
DUP
RCVT
SWAP
DUP
PUSHB_1
 205
WCVTP
SWAP
DUP
PUSHW_1
 346
LTEQ
IF
SWAP
DUP
PUSHB_1
 141
WCVTP
SWAP
EIF
DUP
PUSHB_1
 237
LTEQ
IF
SWAP
DUP
PUSHB_1
 77
WCVTP
SWAP
EIF
DUP
PUSHB_1
 4
MINDEX
LTEQ
IF
SWAP
DUP
PUSHB_1
 13
WCVTP
SWAP
EIF
POP
POP
ENDF
FDEF
DUP
DUP
RCVT
RTG
ROUND[Grey]
WCVTP
DUP
PUSHB_1
 1
ADD
DUP
RCVT
PUSHB_1
 70
SROUND
ROUND[Grey]
ROLL
RCVT
ADD
WCVTP
ENDF
FDEF
SVTCA[x-axis]
PUSHB_2
 11
 10
RS
SWAP
RS
NEG
SPVFS
ENDF
FDEF
SVTCA[y-axis]
PUSHB_2
 10
 11
RS
SWAP
RS
SFVFS
ENDF
FDEF
SVTCA[y-axis]
PUSHB_1
 40
SWAP
WCVTF
PUSHB_2
 1
 40
MIAP[no-rnd]
SVTCA[x-axis]
PUSHB_1
 40
SWAP
WCVTF
PUSHB_2
 2
 40
RCVT
MSIRP[no-rp0]
PUSHB_2
 2
 0
SFVTL[parallel]
GFV
ENDF
FDEF
DUP
RCVT
PUSHB_1
 3
CINDEX
RCVT
SUB
ABS
PUSHB_1
 80
LTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
FDEF
MD[grid]
PUSHB_1
 14
SWAP
WCVTP
ENDF
FDEF
DUP
RCVT
PUSHB_1
 0
RS
ADD
WCVTP
ENDF
FDEF
SVTCA[x-axis]
PUSHB_1
 6
RS
PUSHB_1
 7
RS
NEG
SPVFS
ENDF
FDEF
DUP
ROUND[Black]
PUSHB_1
 64
SUB
PUSHB_1
 0
MAX
DUP
PUSHB_2
 44
 192
ROLL
MIN
PUSHW_1
 4096
DIV
ADD
CALL
GPV
ABS
SWAP
ABS
SUB
NOT
IF
PUSHB_1
 3
SUB
EIF
ENDF
FDEF
ROLL
SPVTCA[x-axis]
RCVT
ROLL
ROLL
SDPVTL[orthog]
PUSHB_1
 17
CALL
PUSHB_1
 41
SWAP
WCVTP
PUSHB_1
 41
ROFF
MIRP[rnd,grey]
RTG
ENDF
FDEF
RCVT
NEG
PUSHB_1
 44
SWAP
WCVTP
RCVT
PUSHB_1
 43
SWAP
WCVTP
ENDF
FDEF
MPPEM
GT
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
FDEF
MPPEM
LTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
FDEF
SVTCA[x-axis]
PUSHB_1
 5
CINDEX
SRP0
SWAP
DUP
ROLL
MIRP[rp0,rnd,black]
SVTCA[y-axis]
PUSHB_1
 1
ADD
SWAP
MIRP[min,rnd,black]
MIRP[min,rnd,grey]
ENDF
FDEF
SVTCA[x-axis]
PUSHB_1
 5
CINDEX
SRP0
SWAP
DUP
ROLL
MIRP[rp0,rnd,black]
SVTCA[y-axis]
PUSHB_1
 1
SUB
SWAP
MIRP[min,rnd,black]
MIRP[min,rnd,grey]
ENDF
FDEF
SVTCA[x-axis]
PUSHB_1
 6
CINDEX
SRP0
MIRP[rp0,rnd,black]
SVTCA[y-axis]
MIRP[min,rnd,black]
MIRP[min,rnd,grey]
ENDF
FDEF
PUSHB_1
 2
RS
PUSHB_1
 1
GT
IF
POP
POP
POP
POP
POP
ELSE
GC[cur]
SWAP
GC[cur]
ADD
ROLL
ROLL
GC[cur]
SWAP
DUP
GC[cur]
ROLL
ADD
ROLL
SUB
PUSHW_1
 -128
DIV
SWAP
DUP
SRP0
SWAP
ROLL
PUSHB_2
 12
 12
ROLL
WCVTF
RCVT
ADD
DUP
PUSHB_1
 0
LT
IF
PUSHB_1
 1
SUB
PUSHW_1
 -70
MAX
ELSE
PUSHB_1
 70
MIN
EIF
PUSHB_1
 16
ADD
ROUND[Grey]
SVTCA[x-axis]
MSIRP[no-rp0]
EIF
ENDF
FDEF
DUP
RCVT
PUSHB_1
 3
CINDEX
GC[cur]
GT
MPPEM
PUSHB_1
 19
LTEQ
OR
IF
PUSHB_1
 2
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
PUSHB_1
 3
CINDEX
PUSHB_1
 3
CINDEX
MIAP[rnd]
SWAP
POP
SHPIX
ELSE
POP
SRP1
EIF
ENDF
FDEF
DUP
RCVT
PUSHB_1
 3
CINDEX
GC[cur]
LT
IF
PUSHB_1
 2
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
PUSHB_1
 3
CINDEX
PUSHB_1
 3
CINDEX
MIAP[rnd]
SWAP
POP
SHPIX
ELSE
POP
SRP1
EIF
ENDF
FDEF
SVTCA[y-axis]
PUSHB_1
 7
RS
PUSHB_1
 6
RS
SFVFS
ENDF
FDEF
POP
POP
GPV
ABS
SWAP
ABS
MAX
PUSHW_1
 16384
DIV
ENDF
FDEF
POP
PUSHB_1
 128
LTEQ
IF
GPV
ABS
SWAP
ABS
MAX
PUSHW_1
 8192
DIV
ELSE
PUSHB_3
 0
 64
 47
CALL
EIF
PUSHB_1
 2
ADD
ENDF
FDEF
POP
PUSHB_1
 192
LTEQ
IF
GPV
ABS
SWAP
ABS
MAX
PUSHW_1
 5461
DIV
ELSE
PUSHB_3
 0
 128
 47
CALL
EIF
PUSHB_1
 2
ADD
ENDF
FDEF
GPV
ABS
SWAP
ABS
MAX
PUSHW_1
 16384
DIV
ADD
SWAP
POP
ENDF
FDEF
MPPEM
GTEQ
IF
ROLL
PUSHB_1
 4
CINDEX
MD[grid]
ABS
SWAP
RCVT
ROUND[Black]
PUSHB_1
 64
MAX
SUB
PUSHB_1
 128
DIV
PUSHB_1
 32
SUB
ROUND[White]
PUSHB_1
 14
SWAP
WCVTP
SWAP
SRP0
PUSHB_1
 14
MIRP[rp0,rnd,white]
ELSE
POP
SWAP
ROLL
SRP2
SRP1
DUP
IP
MDAP[rnd]
EIF
ENDF
FDEF
MPPEM
GTEQ
IF
DUP
PUSHB_1
 3
CINDEX
MD[grid]
ABS
ROUND[Black]
DUP
PUSHB_1
 5
MINDEX
PUSHB_1
 6
CINDEX
MD[grid]
ABS
SWAP
SUB
PUSHB_1
 128
DIV
PUSHB_1
 32
SUB
ROUND[White]
PUSHB_1
 14
SWAP
WCVTP
PUSHB_1
 4
MINDEX
SRP0
PUSHB_1
 14
MIRP[rp0,rnd,white]
ROLL
SRP0
PUSHB_1
 14
SWAP
WCVTP
PUSHB_1
 14
MIRP[rp0,rnd,white]
PUSHB_1
 14
SWAP
WCVTP
PUSHB_1
 14
MIRP[min,rnd,black]
ELSE
ROLL
PUSHB_1
 4
MINDEX
SRP1
SRP2
DUP
IP
SWAP
DUP
IP
MDAP[rnd]
MDAP[rnd]
EIF
ENDF
FDEF
RCVT
SWAP
RCVT
ADD
SWAP
RCVT
ADD
SWAP
RCVT
ADD
SWAP
SROUND
ROUND[Grey]
RTG
PUSHB_1
 128
DIV
DUP
ENDF
FDEF
PUSHB_1
 72
CALL
ENDF
FDEF
DUP
RCVT
PUSHB_1
 0
EQ
IF
PUSHB_1
 64
WCVTP
DUP
RCVT
PUSHB_1
 64
SUB
WCVTP
ELSE
POP
POP
EIF
ENDF
FDEF
RCVT
PUSHB_2
 48
 47
RCVT
SWAP
RCVT
SUB
ADD
PUSHB_1
 1
ADD
ROUND[Black]
WCVTP
ENDF
FDEF
MPPEM
LTEQ
IF
PUSHB_1
 47
SWAP
WCVTF
PUSHB_1
 20
SWAP
WS
ELSE
POP
POP
EIF
ENDF
FDEF
MPPEM
LTEQ
IF
DUP
PUSHB_1
 3
CINDEX
RCVT
ROUND[Black]
GTEQ
IF
WCVTP
ELSE
POP
POP
EIF
ELSE
POP
POP
EIF
ENDF
FDEF
RCVT
PUSHB_1
 20
RS
PUSHB_1
 0
ADD
MUL
PUSHB_1
 1
ADD
ROUND[Black]
WCVTP
ENDF
FDEF
PUSHB_1
 47
RCVT
WCVTP
ENDF
FDEF
RCVT
SWAP
DUP
RCVT
ROLL
ADD
WCVTP
ENDF
FDEF
RCVT
SWAP
RCVT
ADD
WCVTP
ENDF
FDEF
MPPEM
SWAP
LTEQ
IF
PUSHW_2
 51
 -32
PUSHB_2
 52
 32
ELSE
PUSHB_4
 51
 0
 52
 0
EIF
WCVTP
WCVTP
ENDF
FDEF
PUSHB_1
 22
RS
IF
PUSHB_1
 3
MINDEX
RCVT
ROLL
IF
ABS
FLOOR
PUSHB_1
 31
ADD
ELSE
ABS
PUSHB_1
 32
ADD
FLOOR
DUP
IF
ELSE
POP
PUSHB_1
 64
EIF
PUSHB_1
 1
SUB
EIF
SWAP
IF
NEG
EIF
PUSHB_1
 41
SWAP
WCVTP
SWAP
SRP0
PUSHB_1
 41
MIRP[grey]
ELSE
POP
POP
POP
POP
POP
EIF
ENDF
FDEF
PUSHB_1
 2
RS
EQ
IF
MPPEM
GTEQ
SWAP
MPPEM
LTEQ
AND
IF
SHPIX
ELSE
POP
POP
EIF
ELSE
POP
POP
POP
POP
EIF
ENDF
FDEF
PUSHB_1
 22
RS
IF
PUSHB_1
 4
CINDEX
RCVT
ABS
PUSHB_1
 32
ADD
FLOOR
DUP
IF
ELSE
POP
PUSHB_1
 64
EIF
PUSHB_1
 1
SUB
SWAP
IF
ELSE
NEG
EIF
PUSHB_1
 41
SWAP
WCVTP
PUSHB_1
 5
CINDEX
PUSHB_1
 8
CINDEX
SFVTL[parallel]
DUP
IF
SPVTCA[y-axis]
ELSE
SPVTCA[x-axis]
EIF
PUSHB_1
 4
CINDEX
SRP0
PUSHB_1
 5
CINDEX
DUP
GC[cur]
PUSHB_1
 4
CINDEX
SWAP
WS
ALIGNRP
PUSHB_1
 4
CINDEX
PUSHB_1
 7
CINDEX
SFVTL[parallel]
PUSHB_1
 7
CINDEX
SRP0
PUSHB_1
 6
CINDEX
DUP
GC[cur]
PUSHB_1
 4
CINDEX
PUSHB_1
 1
ADD
SWAP
WS
ALIGNRP
DUP
IF
SVTCA[x-axis]
ELSE
SVTCA[y-axis]
EIF
PUSHB_1
 4
CINDEX
SRP0
PUSHB_1
 5
CINDEX
PUSHB_1
 41
MIRP[grey]
PUSHB_1
 41
DUP
RCVT
NEG
WCVTP
PUSHB_1
 7
CINDEX
SRP0
PUSHB_1
 6
CINDEX
PUSHB_1
 41
MIRP[grey]
PUSHB_1
 5
CINDEX
PUSHB_1
 8
CINDEX
SFVTL[parallel]
DUP
IF
SPVTCA[y-axis]
ELSE
SPVTCA[x-axis]
EIF
PUSHB_1
 5
CINDEX
PUSHB_1
 3
CINDEX
RS
SCFS
PUSHB_1
 4
CINDEX
PUSHB_1
 7
CINDEX
SFVTL[parallel]
PUSHB_1
 6
CINDEX
PUSHB_1
 3
CINDEX
PUSHB_1
 1
ADD
RS
SCFS
ELSE
POP
EIF
POP
POP
POP
POP
POP
POP
POP
ENDF
FDEF
SPVTCA[y-axis]
PUSHB_1
 4
CINDEX
DUP
DUP
GC[cur]
PUSHB_1
 4
CINDEX
SWAP
WS
PUSHB_1
 5
CINDEX
SFVTL[parallel]
PUSHB_1
 3
CINDEX
RCVT
SCFS
POP
POP
POP
POP
ENDF
FDEF
SPVTCA[y-axis]
PUSHB_1
 3
CINDEX
DUP
PUSHB_1
 4
CINDEX
SFVTL[parallel]
PUSHB_1
 2
CINDEX
RS
SCFS
POP
POP
POP
ENDF
FDEF
RCVT
SWAP
DUP
RCVT
RTG
DUP
PUSHB_1
 0
LT
DUP
IF
SWAP
NEG
SWAP
EIF
SWAP
ROUND[Grey]
DUP
PUSHB_1
 64
LT
IF
POP
PUSHB_1
 64
EIF
SWAP
IF
NEG
EIF
ROLL
ADD
WCVTP
ENDF
FDEF
MPPEM
GTEQ
SWAP
MPPEM
LTEQ
AND
IF
DUP
RCVT
ROLL
ADD
WCVTP
ELSE
POP
POP
EIF
ENDF
FDEF
MPPEM
EQ
IF
DUP
RCVT
ROLL
ADD
WCVTP
ELSE
POP
POP
EIF
ENDF
FDEF
MPPEM
GTEQ
SWAP
MPPEM
LTEQ
AND
IF
SHPIX
ELSE
POP
POP
EIF
ENDF
FDEF
PUSHB_1
 0
POP
MPPEM
EQ
IF
SHPIX
ELSE
POP
POP
EIF
ENDF
FDEF
PUSHB_1
 2
RS
EQ
IF
PUSHB_1
 70
CALL
ELSE
POP
POP
POP
POP
EIF
ENDF
FDEF
PUSHB_1
 2
RS
EQ
IF
PUSHB_1
 71
CALL
ELSE
POP
POP
POP
EIF
ENDF
FDEF
PUSHB_1
 2
RS
EQ
IF
PUSHB_1
 72
CALL
ELSE
POP
POP
POP
POP
EIF
ENDF
FDEF
PUSHB_1
 2
RS
EQ
IF
PUSHB_1
 73
CALL
ELSE
POP
POP
POP
EIF
ENDF
FDEF
DUP
ROLL
SFVTL[parallel]
SWAP
MPPEM
GTEQ
ROLL
MPPEM
LTEQ
AND
IF
SWAP
SHPIX
ELSE
POP
POP
EIF
ENDF
FDEF
SVTCA[y-axis]
PUSHB_1
 2
CINDEX
MD[grid]
PUSHB_1
 0
GTEQ
IF
DUP
PUSHB_1
 64
SHPIX
SRP1
ELSE
POP
EIF
ENDF
FDEF
SVTCA[x-axis]
GC[cur]
SWAP
GC[cur]
ADD
SWAP
GC[cur]
SUB
SWAP
DUP
SRP0
DUP
GC[cur]
ROLL
SUB
PUSHW_1
 -128
DIV
ROLL
PUSHB_2
 64
 64
ROLL
WCVTF
RCVT
ADD
ROUND[Grey]
MSIRP[no-rp0]
ENDF
FDEF
DUP
ROLL
SWAP
MD[grid]
ABS
ROLL
SWAP
GTEQ
IF
ALIGNRP
ELSE
POP
EIF
ENDF
FDEF
MPPEM
GT
IF
RDTG
ELSE
ROFF
EIF
ENDF
FDEF
PUSHB_1
 18
SVTCA[y-axis]
MPPEM
SVTCA[x-axis]
MPPEM
EQ
WS
ENDF
FDEF
PUSHB_2
 2
 0
WS
PUSHB_2
 35
 1
GETINFO
LTEQ
PUSHB_2
 64
 1
GETINFO
GTEQ
AND
IF
PUSHW_2
 4096
 32
GETINFO
EQ
IF
PUSHB_3
 2
 1
 2
RS
ADD
WS
EIF
PUSHB_2
 36
 1
GETINFO
LTEQ
IF
PUSHW_2
 8192
 64
GETINFO
EQ
IF
PUSHB_3
 2
 2
 2
RS
ADD
WS
PUSHB_2
 36
 1
GETINFO
EQ
IF
PUSHB_3
 2
 32
 2
RS
ADD
WS
SVTCA[y-axis]
MPPEM
SVTCA[x-axis]
MPPEM
GT
IF
PUSHB_3
 2
 8
 2
RS
ADD
WS
EIF
ELSE
PUSHW_2
 16384
 128
GETINFO
EQ
IF
PUSHB_3
 2
 4
 2
RS
ADD
WS
EIF
PUSHW_2
 16384
 128
MUL
PUSHW_1
 256
GETINFO
EQ
IF
PUSHB_3
 2
 8
 2
RS
ADD
WS
EIF
PUSHW_2
 16384
 256
MUL
PUSHW_1
 512
GETINFO
EQ
IF
PUSHB_3
 2
 16
 2
RS
ADD
WS
EIF
PUSHB_2
 38
 1
GETINFO
LTEQ
IF
PUSHW_2
 16384
 512
MUL
PUSHW_1
 1024
GETINFO
EQ
IF
PUSHB_3
 2
 64
 2
RS
ADD
WS
EIF
PUSHW_2
 16384
 1024
MUL
PUSHW_1
 2048
GETINFO
EQ
IF
PUSHB_3
 2
 128
 2
RS
ADD
WS
EIF
EIF
EIF
EIF
EIF
EIF
PUSHB_2
 0
 2
RS
EQ
IF
NPUSHB
 10
 5
 64
 8
 64
 9
 64
 12
 2
 13
 2
ELSE
PUSHB_2
 1
 2
RS
EQ
IF
PUSHB_3
 5
 64
 8
PUSHW_3
 256
 9
 256
PUSHB_4
 12
 1
 13
 1
ELSE
PUSHB_2
 128
 2
RS
GT
IF
PUSHB_3
 5
 64
 8
PUSHW_1
 384
PUSHB_2
 9
 64
ELSE
PUSHB_3
 5
 64
 8
PUSHW_3
 384
 9
 320
EIF
PUSHW_2
 16384
 128
GETINFO
NEQ
PUSHW_2
 16384
 512
MUL
PUSHW_1
 1024
GETINFO
NEQ
AND
IF
PUSHB_4
 12
 0
 13
 1
ELSE
PUSHB_4
 12
 0
 13
 1
EIF
EIF
EIF
WS
WS
WS
WS
WS
ENDF
FDEF
RCVT
RTG
ROUND[Grey]
SWAP
MPPEM
LTEQ
IF
SWAP
DUP
RCVT
DUP
ABS
PUSHB_1
 64
LT
IF
RUTG
EIF
ROUND[Grey]
ROLL
ADD
EIF
WCVTP
ENDF
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 2
CINDEX
PUSHB_1
 2
CINDEX
SVTCA[x-axis]
PUSHB_1
 1
SWAP
MIAP[no-rnd]
SVTCA[y-axis]
PUSHB_1
 2
SWAP
MIAP[no-rnd]
PUSHB_2
 1
 2
SPVTL[parallel]
GPV
PUSHB_1
 10
SWAP
NEG
WS
PUSHB_1
 11
SWAP
WS
SVTCA[x-axis]
PUSHB_1
 1
SWAP
MIAP[rnd]
SVTCA[y-axis]
PUSHB_1
 2
SWAP
MIAP[rnd]
PUSHB_2
 1
 2
SPVTL[parallel]
GPV
PUSHB_1
 6
SWAP
NEG
WS
PUSHB_1
 7
SWAP
WS
PUSHB_1
 1
SZPS
SVTCA[x-axis]
ENDF
FDEF
PUSHB_1
 128
PUSHB_1
 2
RS
LT
PUSHB_1
 1
PUSHB_1
 2
RS
EQ
OR
IF
POP
SWAP
SRP0
PUSHB_1
 32
SMD
MDRP[min,black]
ELSE
ROLL
SRP0
MIRP[min,rnd,black]
EIF
ENDF
FDEF
PUSHB_1
 89
CALL
ENDF
FDEF
ROLL
SRP0
MIRP[rnd,black]
ENDF
EndTTInstrs
ShortTable: cvt  75
  1597
  0
  0
  0
  0
  0
  1395
  37
  0
  0
  0
  0
  0
  0
  0
  854
  922
  1018
  0
  -20
  -41
  0
  0
  0
  0
  0
  0
  -512
  -696
  -860
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  0
  2048
  0
  0
  286
  264
  252
  135
  117
EndShort
ShortTable: maxp 16
  1
  0
  753
  184
  16
  133
  7
  2
  16
  47
  92
  0
  213
  181
  3
  1
EndShort
LangName: 1033 "" "" "" "" "" "" "" "" "" "Pascal Zoghbi " "Droid Arabic Naskh is an Arabic type designed for use in Google+ISIA products such as Google ChromeOS+ISIA and Android+ISIA. Designed to complement the Latin, Greek and Cyrillic provided in the Droid Serif family, the Arabic matches the color, alignment and design detail of the Droid Serif allowing them to be used together for multi-lingual typesetting. This Naskh style is optimized for reading Arabic script on screen. The large +IBgA-loop height+IBkA and +IBgA-tooth height+IBkA help prevent readers from having to zoom web pages to a larger size in order to read them. The traditional Naskh forms are softened for less formal documents such as periodicals and journals. The letterforms structures are based on the calligraphic grammatical rules of the Naskh writing style while drawn with a contemporary feel." "" "" "Licensed under the Apache License, Version 2.0" "http://www.apache.org/licenses/LICENSE-2.0" 
GaspTable: 2 8 10 65535 15 1
Encoding: UnicodeBmp
UnicodeInterp: none
NameList: AGL For New Fonts
DisplaySize: -96
AntiAlias: 1
FitToEm: 1
WinInfo: 64 8 2
BeginPrivate: 0
EndPrivate
AnchorClass2: "Anchor-0"  "'mark' Mark Positioning in Arabic lookup 0 subtable" "Anchor-1"  "'mark' Mark Positioning in Arabic lookup 0 subtable" "Anchor-2"  "'mark' Mark Positioning in Arabic lookup 1 subtable" "Anchor-3"  "'mark' Mark Positioning in Arabic lookup 1 subtable" "Anchor-4"  "'mkmk' Mark to Mark in Arabic lookup 2 subtable" "Anchor-5"  "'mkmk' Mark to Mark in Arabic lookup 3 subtable" 
EndSplineFont
